name: "CI"
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  # run unittest
  test:
    runs-on: ubuntu-latest
    env:
      RUNNER_TOOL_CACHE: /toolcache
    steps:
      - uses: actions/checkout@v3
      - name: Setup FFMPEG
        uses: AnimMouse/setup-ffmpeg@v1
        with:
          version: '7.1'
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'
      - name: Run tests
        run: |
          go test -v -coverprofile=profile.cov ./...
      - name: go vet
        run: go vet ./...
      - name: Generate HTML report
        run: go tool cover -html=profile.cov -o coverage.html
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  # build Linux amd64 binary only
  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      RUNNER_TOOL_CACHE: /toolcache
    steps:
      - uses: actions/checkout@v3
      - name: Setup FFMPEG
        uses: AnimMouse/setup-ffmpeg@v1
        with:
          version: '7.1'
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'
          cache-dependency-path: "**/*.sum"
      - name: Set build time
        run: echo BUILD_TIME=$(date --rfc-3339=seconds) >> ${GITHUB_ENV}
      - name: Build Linux amd64 binary
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          export BINARY_NAME="DDBOT"
          go build -o "$BINARY_NAME" -ldflags '-w -s -X "github.com/cnxysoft/DDBOT-WSa/lsp.BuildTime=${{ env.BUILD_TIME }}" -X github.com/cnxysoft/DDBOT-WSa/lsp.CommitId=${{ github.sha }} -X github.com/cnxysoft/DDBOT-WSa/lsp.Tags=${{ env.Tags }}' github.com/cnxysoft/DDBOT-WSa/cmd
      - name: Upload Linux amd64 binary
        uses: actions/upload-artifact@v4
        with:
          name: linux_amd64
          path: ./DDBOT

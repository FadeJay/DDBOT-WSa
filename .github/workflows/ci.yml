name: "CI"
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'
      - run: go test -v -coverprofile=profile.cov ./...
      - run: go vet ./...
      - run: go tool cover -html=profile.cov -o coverage.html
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo BUILD_TIME=$(date --rfc-3339=seconds) >> $GITHUB_ENV
      - name: Build Linux amd64 binary
        run: |
          docker run --rm -v $PWD:/src -w /src almalinux:8 bash -c "
            dnf install -y golang make git && \
            cd /src && \
            go mod download && \
            cd cmd && \
            GOOS=linux GOARCH=amd64 BINARY_NAME=DDBOT \
            go build -buildvcs=false -o ../\$BINARY_NAME \
            -ldflags '-w -s -X github.com/cnxysoft/DDBOT-WSa/lsp.BuildTime=${BUILD_TIME} -X github.com/cnxysoft/DDBOT-WSa/lsp.CommitId=${GITHUB_SHA}' .
          "
      - uses: actions/upload-artifact@v4
        with:
          name: linux_amd64
          path: ./DDBOT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.28.0
// source: lsp/weibo/weibo.proto

package weibo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardType int32

const (
	CardType_Normal CardType = 0
	CardType_Text   CardType = 1
	CardType_Top    CardType = 2
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0: "Normal",
		1: "Text",
		2: "Top",
	}
	CardType_value = map[string]int32{
		"Normal": 0,
		"Text":   1,
		"Top":    2,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_lsp_weibo_weibo_proto_enumTypes[0].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_lsp_weibo_weibo_proto_enumTypes[0]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardType.Descriptor instead.
func (CardType) EnumDescriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{0}
}

type GenVisitorResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Retcode       int64                    `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Msg           string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data          *GenVisitorResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenVisitorResponse) Reset() {
	*x = GenVisitorResponse{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenVisitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenVisitorResponse) ProtoMessage() {}

func (x *GenVisitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenVisitorResponse.ProtoReflect.Descriptor instead.
func (*GenVisitorResponse) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{0}
}

func (x *GenVisitorResponse) GetRetcode() int64 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GenVisitorResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GenVisitorResponse) GetData() *GenVisitorResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiContainerGetIndexProfileResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Ok            int32                                     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Data          *ApiContainerGetIndexProfileResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiContainerGetIndexProfileResponse) Reset() {
	*x = ApiContainerGetIndexProfileResponse{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiContainerGetIndexProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiContainerGetIndexProfileResponse) ProtoMessage() {}

func (x *ApiContainerGetIndexProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiContainerGetIndexProfileResponse.ProtoReflect.Descriptor instead.
func (*ApiContainerGetIndexProfileResponse) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{1}
}

func (x *ApiContainerGetIndexProfileResponse) GetOk() int32 {
	if x != nil {
		return x.Ok
	}
	return 0
}

func (x *ApiContainerGetIndexProfileResponse) GetData() *ApiContainerGetIndexProfileResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiContainerGetIndexCardsResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Ok            int32                                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Data          *ApiContainerGetIndexCardsResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiContainerGetIndexCardsResponse) Reset() {
	*x = ApiContainerGetIndexCardsResponse{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiContainerGetIndexCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiContainerGetIndexCardsResponse) ProtoMessage() {}

func (x *ApiContainerGetIndexCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiContainerGetIndexCardsResponse.ProtoReflect.Descriptor instead.
func (*ApiContainerGetIndexCardsResponse) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{2}
}

func (x *ApiContainerGetIndexCardsResponse) GetOk() int32 {
	if x != nil {
		return x.Ok
	}
	return 0
}

func (x *ApiContainerGetIndexCardsResponse) GetData() *ApiContainerGetIndexCardsResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Card struct {
	state           protoimpl.MessageState                             `protogen:"open.v1"`
	Visible         *Card_Visible                                      `protobuf:"bytes,1,opt,name=visible,proto3" json:"visible,omitempty"`
	CreatedAt       string                                             `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Id              int64                                              `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Mid             string                                             `protobuf:"bytes,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Text            string                                             `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	TextLength      int32                                              `protobuf:"varint,6,opt,name=textLength,proto3" json:"textLength,omitempty"`
	PicIds          []string                                           `protobuf:"bytes,7,rep,name=pic_ids,json=picIds,proto3" json:"pic_ids,omitempty"`
	User            *ApiContainerGetIndexProfileResponse_Data_UserInfo `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
	PicInfos        map[string]*Card_PicInfo                           `protobuf:"bytes,9,rep,name=pic_infos,json=picInfos,proto3" json:"pic_infos,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Title           *Card_TitleInfo                                    `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	RetweetedStatus *Card                                              `protobuf:"bytes,11,opt,name=retweeted_status,json=retweetedStatus,proto3" json:"retweeted_status,omitempty"`
	RawText         string                                             `protobuf:"bytes,12,opt,name=raw_text,json=rawText,proto3" json:"raw_text,omitempty"`
	Mblogtype       CardType                                           `protobuf:"varint,13,opt,name=mblogtype,proto3,enum=weibo.CardType" json:"mblogtype,omitempty"`
	Mblogid         string                                             `protobuf:"bytes,14,opt,name=mblogid,proto3" json:"mblogid,omitempty"`
	PageInfo        *Card_PageInfo                                     `protobuf:"bytes,15,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	MixMediaInfo    *Card_MixMediaInfo                                 `protobuf:"bytes,16,opt,name=mix_media_info,json=mixMediaInfo,proto3" json:"mix_media_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Card) Reset() {
	*x = Card{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3}
}

func (x *Card) GetVisible() *Card_Visible {
	if x != nil {
		return x.Visible
	}
	return nil
}

func (x *Card) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Card) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Card) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *Card) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Card) GetTextLength() int32 {
	if x != nil {
		return x.TextLength
	}
	return 0
}

func (x *Card) GetPicIds() []string {
	if x != nil {
		return x.PicIds
	}
	return nil
}

func (x *Card) GetUser() *ApiContainerGetIndexProfileResponse_Data_UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Card) GetPicInfos() map[string]*Card_PicInfo {
	if x != nil {
		return x.PicInfos
	}
	return nil
}

func (x *Card) GetTitle() *Card_TitleInfo {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *Card) GetRetweetedStatus() *Card {
	if x != nil {
		return x.RetweetedStatus
	}
	return nil
}

func (x *Card) GetRawText() string {
	if x != nil {
		return x.RawText
	}
	return ""
}

func (x *Card) GetMblogtype() CardType {
	if x != nil {
		return x.Mblogtype
	}
	return CardType_Normal
}

func (x *Card) GetMblogid() string {
	if x != nil {
		return x.Mblogid
	}
	return ""
}

func (x *Card) GetPageInfo() *Card_PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *Card) GetMixMediaInfo() *Card_MixMediaInfo {
	if x != nil {
		return x.MixMediaInfo
	}
	return nil
}

type GenVisitorResponse_Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sub           string                 `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	Subp          string                 `protobuf:"bytes,2,opt,name=subp,proto3" json:"subp,omitempty"`
	Next          string                 `protobuf:"bytes,3,opt,name=next,proto3" json:"next,omitempty"`
	Alt           string                 `protobuf:"bytes,4,opt,name=alt,proto3" json:"alt,omitempty"`
	Tid           string                 `protobuf:"bytes,5,opt,name=tid,proto3" json:"tid,omitempty"`
	NewTid        bool                   `protobuf:"varint,6,opt,name=new_tid,json=newTid,proto3" json:"new_tid,omitempty"`
	Confidence    int32                  `protobuf:"varint,7,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenVisitorResponse_Data) Reset() {
	*x = GenVisitorResponse_Data{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenVisitorResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenVisitorResponse_Data) ProtoMessage() {}

func (x *GenVisitorResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenVisitorResponse_Data.ProtoReflect.Descriptor instead.
func (*GenVisitorResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GenVisitorResponse_Data) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *GenVisitorResponse_Data) GetSubp() string {
	if x != nil {
		return x.Subp
	}
	return ""
}

func (x *GenVisitorResponse_Data) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *GenVisitorResponse_Data) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

func (x *GenVisitorResponse_Data) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *GenVisitorResponse_Data) GetNewTid() bool {
	if x != nil {
		return x.NewTid
	}
	return false
}

func (x *GenVisitorResponse_Data) GetConfidence() int32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type ApiContainerGetIndexProfileResponse_Data struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	User          *ApiContainerGetIndexProfileResponse_Data_UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiContainerGetIndexProfileResponse_Data) Reset() {
	*x = ApiContainerGetIndexProfileResponse_Data{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiContainerGetIndexProfileResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiContainerGetIndexProfileResponse_Data) ProtoMessage() {}

func (x *ApiContainerGetIndexProfileResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiContainerGetIndexProfileResponse_Data.ProtoReflect.Descriptor instead.
func (*ApiContainerGetIndexProfileResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ApiContainerGetIndexProfileResponse_Data) GetUser() *ApiContainerGetIndexProfileResponse_Data_UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type ApiContainerGetIndexProfileResponse_Data_UserInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScreenName      string                 `protobuf:"bytes,2,opt,name=screen_name,json=screenName,proto3" json:"screen_name,omitempty"`
	ProfileImageUrl string                 `protobuf:"bytes,3,opt,name=profile_image_url,json=profileImageUrl,proto3" json:"profile_image_url,omitempty"`
	ProfileUrl      string                 `protobuf:"bytes,4,opt,name=profile_url,json=profileUrl,proto3" json:"profile_url,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ApiContainerGetIndexProfileResponse_Data_UserInfo) Reset() {
	*x = ApiContainerGetIndexProfileResponse_Data_UserInfo{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiContainerGetIndexProfileResponse_Data_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiContainerGetIndexProfileResponse_Data_UserInfo) ProtoMessage() {}

func (x *ApiContainerGetIndexProfileResponse_Data_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiContainerGetIndexProfileResponse_Data_UserInfo.ProtoReflect.Descriptor instead.
func (*ApiContainerGetIndexProfileResponse_Data_UserInfo) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ApiContainerGetIndexProfileResponse_Data_UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiContainerGetIndexProfileResponse_Data_UserInfo) GetScreenName() string {
	if x != nil {
		return x.ScreenName
	}
	return ""
}

func (x *ApiContainerGetIndexProfileResponse_Data_UserInfo) GetProfileImageUrl() string {
	if x != nil {
		return x.ProfileImageUrl
	}
	return ""
}

func (x *ApiContainerGetIndexProfileResponse_Data_UserInfo) GetProfileUrl() string {
	if x != nil {
		return x.ProfileUrl
	}
	return ""
}

type ApiContainerGetIndexCardsResponse_Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SinceId       string                 `protobuf:"bytes,1,opt,name=since_id,json=sinceId,proto3" json:"since_id,omitempty"`
	List          []*Card                `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiContainerGetIndexCardsResponse_Data) Reset() {
	*x = ApiContainerGetIndexCardsResponse_Data{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiContainerGetIndexCardsResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiContainerGetIndexCardsResponse_Data) ProtoMessage() {}

func (x *ApiContainerGetIndexCardsResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiContainerGetIndexCardsResponse_Data.ProtoReflect.Descriptor instead.
func (*ApiContainerGetIndexCardsResponse_Data) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ApiContainerGetIndexCardsResponse_Data) GetSinceId() string {
	if x != nil {
		return x.SinceId
	}
	return ""
}

func (x *ApiContainerGetIndexCardsResponse_Data) GetList() []*Card {
	if x != nil {
		return x.List
	}
	return nil
}

type Card_Visible struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int64                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	ListId        int64                  `protobuf:"varint,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card_Visible) Reset() {
	*x = Card_Visible{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_Visible) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_Visible) ProtoMessage() {}

func (x *Card_Visible) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_Visible.ProtoReflect.Descriptor instead.
func (*Card_Visible) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Card_Visible) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Card_Visible) GetListId() int64 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type Card_PicVariant struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Url     string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width   int32                  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height  int32                  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	CutType int32                  `protobuf:"varint,4,opt,name=cut_type,json=cutType,proto3" json:"cut_type,omitempty"`
	// JSON 里可能是 null，用 StringValue 接住 null
	Type          *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card_PicVariant) Reset() {
	*x = Card_PicVariant{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_PicVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_PicVariant) ProtoMessage() {}

func (x *Card_PicVariant) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_PicVariant.ProtoReflect.Descriptor instead.
func (*Card_PicVariant) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Card_PicVariant) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Card_PicVariant) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Card_PicVariant) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Card_PicVariant) GetCutType() int32 {
	if x != nil {
		return x.CutType
	}
	return 0
}

func (x *Card_PicVariant) GetType() *wrapperspb.StringValue {
	if x != nil {
		return x.Type
	}
	return nil
}

type Card_PicInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Thumbnail     *Card_PicVariant       `protobuf:"bytes,1,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Bmiddle       *Card_PicVariant       `protobuf:"bytes,2,opt,name=bmiddle,proto3" json:"bmiddle,omitempty"`
	Large         *Card_PicVariant       `protobuf:"bytes,3,opt,name=large,proto3" json:"large,omitempty"`
	Original      *Card_PicVariant       `protobuf:"bytes,4,opt,name=original,proto3" json:"original,omitempty"`
	Largest       *Card_PicVariant       `protobuf:"bytes,5,opt,name=largest,proto3" json:"largest,omitempty"`
	Mw2000        *Card_PicVariant       `protobuf:"bytes,6,opt,name=mw2000,proto3" json:"mw2000,omitempty"`
	Largecover    *Card_PicVariant       `protobuf:"bytes,7,opt,name=largecover,proto3" json:"largecover,omitempty"`
	ObjectId      string                 `protobuf:"bytes,20,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	PicId         string                 `protobuf:"bytes,21,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	PhotoTag      int32                  `protobuf:"varint,22,opt,name=photo_tag,json=photoTag,proto3" json:"photo_tag,omitempty"`
	Type          string                 `protobuf:"bytes,23,opt,name=type,proto3" json:"type,omitempty"`
	VideoObjectId string                 `protobuf:"bytes,24,opt,name=video_object_id,json=videoObjectId,proto3" json:"video_object_id,omitempty"`
	Video         string                 `protobuf:"bytes,25,opt,name=video,proto3" json:"video,omitempty"`
	PicStatus     int32                  `protobuf:"varint,26,opt,name=pic_status,json=picStatus,proto3" json:"pic_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card_PicInfo) Reset() {
	*x = Card_PicInfo{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_PicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_PicInfo) ProtoMessage() {}

func (x *Card_PicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_PicInfo.ProtoReflect.Descriptor instead.
func (*Card_PicInfo) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Card_PicInfo) GetThumbnail() *Card_PicVariant {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *Card_PicInfo) GetBmiddle() *Card_PicVariant {
	if x != nil {
		return x.Bmiddle
	}
	return nil
}

func (x *Card_PicInfo) GetLarge() *Card_PicVariant {
	if x != nil {
		return x.Large
	}
	return nil
}

func (x *Card_PicInfo) GetOriginal() *Card_PicVariant {
	if x != nil {
		return x.Original
	}
	return nil
}

func (x *Card_PicInfo) GetLargest() *Card_PicVariant {
	if x != nil {
		return x.Largest
	}
	return nil
}

func (x *Card_PicInfo) GetMw2000() *Card_PicVariant {
	if x != nil {
		return x.Mw2000
	}
	return nil
}

func (x *Card_PicInfo) GetLargecover() *Card_PicVariant {
	if x != nil {
		return x.Largecover
	}
	return nil
}

func (x *Card_PicInfo) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *Card_PicInfo) GetPicId() string {
	if x != nil {
		return x.PicId
	}
	return ""
}

func (x *Card_PicInfo) GetPhotoTag() int32 {
	if x != nil {
		return x.PhotoTag
	}
	return 0
}

func (x *Card_PicInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Card_PicInfo) GetVideoObjectId() string {
	if x != nil {
		return x.VideoObjectId
	}
	return ""
}

func (x *Card_PicInfo) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *Card_PicInfo) GetPicStatus() int32 {
	if x != nil {
		return x.PicStatus
	}
	return 0
}

type Card_TitleInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	BaseColor     int32                  `protobuf:"varint,2,opt,name=base_color,json=baseColor,proto3" json:"base_color,omitempty"`
	IconUrl       string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card_TitleInfo) Reset() {
	*x = Card_TitleInfo{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_TitleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_TitleInfo) ProtoMessage() {}

func (x *Card_TitleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_TitleInfo.ProtoReflect.Descriptor instead.
func (*Card_TitleInfo) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 3}
}

func (x *Card_TitleInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Card_TitleInfo) GetBaseColor() int32 {
	if x != nil {
		return x.BaseColor
	}
	return 0
}

func (x *Card_TitleInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type Card_PageInfo struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Type          *structpb.Value          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	PageId        string                   `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	ObjectId      string                   `protobuf:"bytes,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ObjectType    string                   `protobuf:"bytes,4,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	Content1      string                   `protobuf:"bytes,5,opt,name=content1,proto3" json:"content1,omitempty"`
	Content2      string                   `protobuf:"bytes,6,opt,name=content2,proto3" json:"content2,omitempty"`
	ActStatus     int32                    `protobuf:"varint,7,opt,name=act_status,json=actStatus,proto3" json:"act_status,omitempty"`
	MediaInfo     *Card_PageInfo_MediaInfo `protobuf:"bytes,8,opt,name=media_info,json=mediaInfo,proto3" json:"media_info,omitempty"`
	PagePic       string                   `protobuf:"bytes,9,opt,name=page_pic,json=pagePic,proto3" json:"page_pic,omitempty"`
	PageTitle     string                   `protobuf:"bytes,10,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	ShortUrl      string                   `protobuf:"bytes,11,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card_PageInfo) Reset() {
	*x = Card_PageInfo{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_PageInfo) ProtoMessage() {}

func (x *Card_PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_PageInfo.ProtoReflect.Descriptor instead.
func (*Card_PageInfo) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 4}
}

func (x *Card_PageInfo) GetType() *structpb.Value {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Card_PageInfo) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *Card_PageInfo) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *Card_PageInfo) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *Card_PageInfo) GetContent1() string {
	if x != nil {
		return x.Content1
	}
	return ""
}

func (x *Card_PageInfo) GetContent2() string {
	if x != nil {
		return x.Content2
	}
	return ""
}

func (x *Card_PageInfo) GetActStatus() int32 {
	if x != nil {
		return x.ActStatus
	}
	return 0
}

func (x *Card_PageInfo) GetMediaInfo() *Card_PageInfo_MediaInfo {
	if x != nil {
		return x.MediaInfo
	}
	return nil
}

func (x *Card_PageInfo) GetPagePic() string {
	if x != nil {
		return x.PagePic
	}
	return ""
}

func (x *Card_PageInfo) GetPageTitle() string {
	if x != nil {
		return x.PageTitle
	}
	return ""
}

func (x *Card_PageInfo) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

type Card_MixMediaInfo struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Items         []*Card_MixMediaInfo_Items `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card_MixMediaInfo) Reset() {
	*x = Card_MixMediaInfo{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_MixMediaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_MixMediaInfo) ProtoMessage() {}

func (x *Card_MixMediaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_MixMediaInfo.ProtoReflect.Descriptor instead.
func (*Card_MixMediaInfo) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 5}
}

func (x *Card_MixMediaInfo) GetItems() []*Card_MixMediaInfo_Items {
	if x != nil {
		return x.Items
	}
	return nil
}

type Card_PageInfo_MediaInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StreamUrl         string                 `protobuf:"bytes,2,opt,name=stream_url,json=streamUrl,proto3" json:"stream_url,omitempty"`
	StreamUrlHd       string                 `protobuf:"bytes,3,opt,name=stream_url_hd,json=streamUrlHd,proto3" json:"stream_url_hd,omitempty"`
	Format            string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	AuthorId          string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorMid         string                 `protobuf:"bytes,6,opt,name=author_mid,json=authorMid,proto3" json:"author_mid,omitempty"`
	AuthorName        string                 `protobuf:"bytes,7,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	OnlineUsers       string                 `protobuf:"bytes,8,opt,name=online_users,json=onlineUsers,proto3" json:"online_users,omitempty"`
	OnlineUsersNumber int64                  `protobuf:"varint,9,opt,name=online_users_number,json=onlineUsersNumber,proto3" json:"online_users_number,omitempty"`
	VideoPublishTime  int64                  `protobuf:"varint,10,opt,name=video_publish_time,json=videoPublishTime,proto3" json:"video_publish_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Card_PageInfo_MediaInfo) Reset() {
	*x = Card_PageInfo_MediaInfo{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_PageInfo_MediaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_PageInfo_MediaInfo) ProtoMessage() {}

func (x *Card_PageInfo_MediaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_PageInfo_MediaInfo.ProtoReflect.Descriptor instead.
func (*Card_PageInfo_MediaInfo) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 4, 0}
}

func (x *Card_PageInfo_MediaInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetStreamUrl() string {
	if x != nil {
		return x.StreamUrl
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetStreamUrlHd() string {
	if x != nil {
		return x.StreamUrlHd
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetAuthorMid() string {
	if x != nil {
		return x.AuthorMid
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetOnlineUsers() string {
	if x != nil {
		return x.OnlineUsers
	}
	return ""
}

func (x *Card_PageInfo_MediaInfo) GetOnlineUsersNumber() int64 {
	if x != nil {
		return x.OnlineUsersNumber
	}
	return 0
}

func (x *Card_PageInfo_MediaInfo) GetVideoPublishTime() int64 {
	if x != nil {
		return x.VideoPublishTime
	}
	return 0
}

type Card_MixMediaInfo_Items struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Data          *structpb.Struct       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card_MixMediaInfo_Items) Reset() {
	*x = Card_MixMediaInfo_Items{}
	mi := &file_lsp_weibo_weibo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card_MixMediaInfo_Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card_MixMediaInfo_Items) ProtoMessage() {}

func (x *Card_MixMediaInfo_Items) ProtoReflect() protoreflect.Message {
	mi := &file_lsp_weibo_weibo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card_MixMediaInfo_Items.ProtoReflect.Descriptor instead.
func (*Card_MixMediaInfo_Items) Descriptor() ([]byte, []int) {
	return file_lsp_weibo_weibo_proto_rawDescGZIP(), []int{3, 5, 0}
}

func (x *Card_MixMediaInfo_Items) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Card_MixMediaInfo_Items) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card_MixMediaInfo_Items) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_lsp_weibo_weibo_proto protoreflect.FileDescriptor

var file_lsp_weibo_weibo_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6c, 0x73, 0x70, 0x2f, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2f, 0x77, 0x65, 0x69, 0x62,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x02, 0x0a,
	0x12, 0x47, 0x65, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x9d, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x75, 0x62, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x75,
	0x62, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65,
	0x77, 0x5f, 0x74, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x65, 0x77,
	0x54, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x23, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x43, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x65, 0x69, 0x62,
	0x6f, 0x2e, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0xdf, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e,
	0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x88, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x72, 0x6c, 0x22, 0xba, 0x01, 0x0a, 0x21, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x41,
	0x70, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x42, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x77,
	0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xb1, 0x13, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x65, 0x69, 0x62,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x07,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x4c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x2e, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x69,
	0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x0f, 0x72, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x6d,
	0x62, 0x6c, 0x6f, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x6d, 0x62, 0x6c, 0x6f, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x62,
	0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x62, 0x6c,
	0x6f, 0x67, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0e, 0x6d, 0x69, 0x78, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x4d, 0x69, 0x78,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6d, 0x69, 0x78, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x36, 0x0a, 0x07, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x1a,
	0x99, 0x01, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0xaf, 0x04, 0x0a, 0x07,
	0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x69,
	0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x69, 0x63, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a,
	0x07, 0x62, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x69, 0x63, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x62, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x69, 0x63, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x32, 0x0a,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x69, 0x63,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x12, 0x30, 0x0a, 0x07, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e,
	0x50, 0x69, 0x63, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x6c, 0x61, 0x72, 0x67,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x6d, 0x77, 0x32, 0x30, 0x30, 0x30, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x2e, 0x50, 0x69, 0x63, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x77, 0x32,
	0x30, 0x30, 0x30, 0x12, 0x36, 0x0a, 0x0a, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x69, 0x63, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52,
	0x0a, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x59, 0x0a,
	0x09, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x1a, 0xd5, 0x05, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x3d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x50, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0xd8, 0x02, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x68, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x48, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6d, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4d, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x1a, 0x9e, 0x01, 0x0a, 0x0c, 0x4d, 0x69, 0x78, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x4d, 0x69,
	0x78, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x58, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x50, 0x0a, 0x0d, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x2e, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x2a, 0x29, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x6f, 0x70, 0x10, 0x02, 0x42, 0x0b,
	0x5a, 0x09, 0x6c, 0x73, 0x70, 0x2f, 0x77, 0x65, 0x69, 0x62, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_lsp_weibo_weibo_proto_rawDescOnce sync.Once
	file_lsp_weibo_weibo_proto_rawDescData = file_lsp_weibo_weibo_proto_rawDesc
)

func file_lsp_weibo_weibo_proto_rawDescGZIP() []byte {
	file_lsp_weibo_weibo_proto_rawDescOnce.Do(func() {
		file_lsp_weibo_weibo_proto_rawDescData = protoimpl.X.CompressGZIP(file_lsp_weibo_weibo_proto_rawDescData)
	})
	return file_lsp_weibo_weibo_proto_rawDescData
}

var file_lsp_weibo_weibo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lsp_weibo_weibo_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_lsp_weibo_weibo_proto_goTypes = []any{
	(CardType)(0),                                             // 0: weibo.CardType
	(*GenVisitorResponse)(nil),                                // 1: weibo.GenVisitorResponse
	(*ApiContainerGetIndexProfileResponse)(nil),               // 2: weibo.ApiContainerGetIndexProfileResponse
	(*ApiContainerGetIndexCardsResponse)(nil),                 // 3: weibo.ApiContainerGetIndexCardsResponse
	(*Card)(nil),                                              // 4: weibo.Card
	(*GenVisitorResponse_Data)(nil),                           // 5: weibo.GenVisitorResponse.Data
	(*ApiContainerGetIndexProfileResponse_Data)(nil),          // 6: weibo.ApiContainerGetIndexProfileResponse.Data
	(*ApiContainerGetIndexProfileResponse_Data_UserInfo)(nil), // 7: weibo.ApiContainerGetIndexProfileResponse.Data.UserInfo
	(*ApiContainerGetIndexCardsResponse_Data)(nil),            // 8: weibo.ApiContainerGetIndexCardsResponse.Data
	(*Card_Visible)(nil),                                      // 9: weibo.Card.Visible
	(*Card_PicVariant)(nil),                                   // 10: weibo.Card.PicVariant
	(*Card_PicInfo)(nil),                                      // 11: weibo.Card.PicInfo
	(*Card_TitleInfo)(nil),                                    // 12: weibo.Card.TitleInfo
	(*Card_PageInfo)(nil),                                     // 13: weibo.Card.PageInfo
	(*Card_MixMediaInfo)(nil),                                 // 14: weibo.Card.MixMediaInfo
	nil,                                                       // 15: weibo.Card.PicInfosEntry
	(*Card_PageInfo_MediaInfo)(nil),                           // 16: weibo.Card.PageInfo.MediaInfo
	(*Card_MixMediaInfo_Items)(nil),                           // 17: weibo.Card.MixMediaInfo.Items
	(*wrapperspb.StringValue)(nil),                            // 18: google.protobuf.StringValue
	(*structpb.Value)(nil),                                    // 19: google.protobuf.Value
	(*structpb.Struct)(nil),                                   // 20: google.protobuf.Struct
}
var file_lsp_weibo_weibo_proto_depIdxs = []int32{
	5,  // 0: weibo.GenVisitorResponse.data:type_name -> weibo.GenVisitorResponse.Data
	6,  // 1: weibo.ApiContainerGetIndexProfileResponse.data:type_name -> weibo.ApiContainerGetIndexProfileResponse.Data
	8,  // 2: weibo.ApiContainerGetIndexCardsResponse.data:type_name -> weibo.ApiContainerGetIndexCardsResponse.Data
	9,  // 3: weibo.Card.visible:type_name -> weibo.Card.Visible
	7,  // 4: weibo.Card.user:type_name -> weibo.ApiContainerGetIndexProfileResponse.Data.UserInfo
	15, // 5: weibo.Card.pic_infos:type_name -> weibo.Card.PicInfosEntry
	12, // 6: weibo.Card.title:type_name -> weibo.Card.TitleInfo
	4,  // 7: weibo.Card.retweeted_status:type_name -> weibo.Card
	0,  // 8: weibo.Card.mblogtype:type_name -> weibo.CardType
	13, // 9: weibo.Card.page_info:type_name -> weibo.Card.PageInfo
	14, // 10: weibo.Card.mix_media_info:type_name -> weibo.Card.MixMediaInfo
	7,  // 11: weibo.ApiContainerGetIndexProfileResponse.Data.user:type_name -> weibo.ApiContainerGetIndexProfileResponse.Data.UserInfo
	4,  // 12: weibo.ApiContainerGetIndexCardsResponse.Data.list:type_name -> weibo.Card
	18, // 13: weibo.Card.PicVariant.type:type_name -> google.protobuf.StringValue
	10, // 14: weibo.Card.PicInfo.thumbnail:type_name -> weibo.Card.PicVariant
	10, // 15: weibo.Card.PicInfo.bmiddle:type_name -> weibo.Card.PicVariant
	10, // 16: weibo.Card.PicInfo.large:type_name -> weibo.Card.PicVariant
	10, // 17: weibo.Card.PicInfo.original:type_name -> weibo.Card.PicVariant
	10, // 18: weibo.Card.PicInfo.largest:type_name -> weibo.Card.PicVariant
	10, // 19: weibo.Card.PicInfo.mw2000:type_name -> weibo.Card.PicVariant
	10, // 20: weibo.Card.PicInfo.largecover:type_name -> weibo.Card.PicVariant
	19, // 21: weibo.Card.PageInfo.type:type_name -> google.protobuf.Value
	16, // 22: weibo.Card.PageInfo.media_info:type_name -> weibo.Card.PageInfo.MediaInfo
	17, // 23: weibo.Card.MixMediaInfo.items:type_name -> weibo.Card.MixMediaInfo.Items
	11, // 24: weibo.Card.PicInfosEntry.value:type_name -> weibo.Card.PicInfo
	20, // 25: weibo.Card.MixMediaInfo.Items.data:type_name -> google.protobuf.Struct
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_lsp_weibo_weibo_proto_init() }
func file_lsp_weibo_weibo_proto_init() {
	if File_lsp_weibo_weibo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lsp_weibo_weibo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lsp_weibo_weibo_proto_goTypes,
		DependencyIndexes: file_lsp_weibo_weibo_proto_depIdxs,
		EnumInfos:         file_lsp_weibo_weibo_proto_enumTypes,
		MessageInfos:      file_lsp_weibo_weibo_proto_msgTypes,
	}.Build()
	File_lsp_weibo_weibo_proto = out.File
	file_lsp_weibo_weibo_proto_rawDesc = nil
	file_lsp_weibo_weibo_proto_goTypes = nil
	file_lsp_weibo_weibo_proto_depIdxs = nil
}
